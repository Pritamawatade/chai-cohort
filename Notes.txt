arr.reduce() => please checkout this. This is very important when it comes to the machine coding interview.

leanred about .call and .bind() on array

call :- call is used to change the context of the function in the object.
bind: :- bind is return the function. 

javascript defination
        javascript has the call stack concept where each picee of code goto the call stack and call stack execute. 
        call stack exectute everything. Call stack has one feature which is IT IS WAIT FOR NOTHING. javascript engine wait for nothing.
        it doesn't wait for anything. 


        setTimeout is the function of browser.

        micro task queue -> promise
        task queue -> setTimeout

        event loop 
        Task queue
        call stack  
        micro task queue 

        https://www.jsv9000.app/
        https://app.eraser.io/workspace/C3QWGDrgG8MbSgAKzmac


        // Project of dragable 
        https://app.eraser.io/workspace/dfnfllJ0jRgl10NvlGcz?origin=share



sem version : 
    express : 4.28.4 -> major minor and patch


Pipeing: 
    using the sequence of method is called piping 
wx. "pritam".toUppercase().substr(1,2).indexOf(p)



Week-7:
    When we run code the global execution context is created and then loaded into the memory.
    Hoisting:
        Hoisting is the process where interpreter appears to intilittize variable declaration to the top.
        const, let, and var all three variables support Hoisting but we can't access the const and let variable 
        because of the tempotial dead zone. before the intilittize of the let variable the dead zone exist.     

Week-8:
    app.use() : -it's an middleware
    cors: - cors origin resource sharing


week-10: 
    : Full stack app with SQL database
    - Create an normal express app.
    - Go to the NEON DB and get the postgres connection URL
    - npx prisma init is the commond to intinalise the prisma 
    - npx prisma migrate dev to sync the changes into the online database.
    - npx prisma format to format the code. 
    - use this code to intinalise the prisma client and use the mehtods on hte prisma
    
    import { PrismaClient } from "@prisma/client";
    const prisma = new PrismaClient();

    How node executes the code : 
        All the code that you hve run with node. Node create the function execute and under that function all your code
        is pasted and execute function is acted like wrapper function.

        -> require function as a parameter takes a id and search the module in his interal datasource.
        -> exectuteWrapper function accept first parameter as a exports object

    Package-lock:
        In package lock which module is depending on which module and which version all this info is given in package
        lock file.

    tasks :
        - library management system
        - parking 
        - learnyst 
        - hospital
        - food del app with real time rider tracking 
        - e-commerce
        
week-11:
    TO get started with prettier
        1. Make a .prettierrc file and define your rules in json format.
        2. And also make the .prettierignore and give name of files and folder in which you don't pretter to interfare
    
    # .env.local is used when we are providing envirmoment variable from local machine just to sake of running the Project

    megaProject:
        1. healthcheck route - it is controller to check if the server is up and running


week-12:
        Typescript is used to define types.
        To use TS in the backend first we need to create TS config file. -- tsc --init
        we can use import syntax from start if we use TS in express.
        // every variable in .env is string
        install @types/node it contains the type of all node dependecnyis. 
        also npm i typescript.

        winston is a logger


    Freelancing project:
         Too many click points.   
         sliber issue
         what's that website wants to tell, STORY. user persona story important.
         you can be creative with wireframe. 
         left side info and right side why.
         every section have CTA.
         No cpoyright issues


         Must-Have:
            - Deployed link (working, public)
            - GitHub repo link
            - Good looking UI as per eraser (https://app.eraser.io/workspace/OVKKJzx4PRQBL7rScVg8)
            - Good code quality (clean, readable, DRY)
            - Proper file structure (components, assets, styles, etc.)
            - Meaningful commit messages (atomic, descriptive)
            - Fully responsive design (mobile, tablet, desktop)
            - Accessibility considerations (semantic HTML, aria tags)
            - No usage of proprietary or problematic assets without license
            - No usage of copyrighted material

            Bonus:
            - Usage of React.js
            - Lighthouse performance score above 90
            - Micro-interactions (tasteful and not overdone)
            - Deployment CI/CD pipeline (like with Vercel)
            - Custom 404 page
            - Easter eggs or thoughtful UX touches
